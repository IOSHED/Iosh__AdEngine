from aiogram.filters.state import State, StatesGroup
from aiogram_dialog import (
    Dialog,
    Window,
)
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import Back, Button, Cancel, SwitchTo, Toggle
from aiogram_dialog.widgets.text import Const, Format

from src.buttons.moderate_words import BTN_COUNTER_TIME_ADVANCE, BTN_MANAGE_WINDOW
from src.handlers.moderate_words import ModerateWordsHandler
from src.handlers.time import TimeHandler
from src.messages.moderate import MSG_ADMIN_PANEL
from src.validators.list_words import ListWordsValidator


class ModerateDialog(StatesGroup):
    home = State()
    main_moderate_text = State()
    view_words = State()
    delete_words = State()
    add_words = State()
    set_time_advance = State()


moderate_words_dialog = Dialog(
    Window(
        MSG_ADMIN_PANEL,
        SwitchTo(
            Const("üïê –ü—Ä–æ–º–æ—Ç–∞—Ç—å –≤—Ä–µ–º—è"),
            id="go_to_time_advance",
            state=ModerateDialog.set_time_advance,
        ),
        SwitchTo(
            Const("ü§¨ –ú–æ–¥–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞"),
            id="go_to_moderate",
            state=ModerateDialog.main_moderate_text,
        ),
        Cancel(Const("üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é")),
        state=ModerateDialog.home,
    ),
    Window(
        Const("üïê –ü—Ä–æ–º–æ—Ç–∞—Ç—å –≤—Ä–µ–º—è –¥–æ"),
        BTN_COUNTER_TIME_ADVANCE,
        Back(
            Const("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"),
            id="confirm_time_advance",
            on_click=TimeHandler.set_time_advance,
        ),
        BTN_MANAGE_WINDOW(ModerateDialog.home),
        state=ModerateDialog.set_time_advance,
    ),
    Window(
        Const("ü§¨ –ú–æ–¥–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞"),
        Toggle(
            Format("{item[0]} {item[1]}"),
            id="radio",
            items=[("‚úì", "–í—ã–∫–ª—é—á–∏—Ç—å"), ("", "–í–∫–ª—é—á–∏—Ç—å")],
            item_id_getter=lambda item: item[1],
            on_state_changed=ModerateWordsHandler.change_moderate_words,
        ),
        SwitchTo(
            Const("üìù –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ —Å–ª–æ–≤–∞"),
            id="go_to_view_words",
            state=ModerateDialog.view_words,
        ),
        SwitchTo(
            Const("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ —Å–ª–æ–≤–∞"),
            id="go_to_add_words",
            state=ModerateDialog.add_words,
        ),
        SwitchTo(
            Const("‚ûñ –£–¥–∞–ª–∏—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ —Å–ª–æ–≤–∞"),
            id="go_to_delete_words",
            state=ModerateDialog.delete_words,
        ),
        BTN_MANAGE_WINDOW(ModerateDialog.home),
        state=ModerateDialog.main_moderate_text,
    ),
    Window(
        Const("üìù –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ —Å–ª–æ–≤–∞ –≤ —Ñ–∞–π–ª–µ"),
        Button(
            Const("–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å–æ —Å–ª–æ–≤–∞–º–∏"),
            id="getter_file_with_black_words",
            on_click=ModerateWordsHandler.get_words,
        ),
        BTN_MANAGE_WINDOW(ModerateDialog.main_moderate_text),
        state=ModerateDialog.view_words,
    ),
    Window(
        Const("‚ûï <b>–î–æ–±–∞–≤–∏—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ —Å–ª–æ–≤–∞</b>"),
        Const("–í–≤–æ–¥–∏—Ç–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é."),
        BTN_MANAGE_WINDOW(ModerateDialog.main_moderate_text),
        TextInput(
            id="new_black_words",
            on_error=ListWordsValidator.error,
            type_factory=ListWordsValidator.validate,
            on_success=ModerateWordsHandler.add_words,
        ),
        state=ModerateDialog.add_words,
    ),
    Window(
        Const("‚ûñ –£–¥–∞–ª–∏—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ —Å–ª–æ–≤–∞"),
        Const("–í–≤–æ–¥–∏—Ç–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é."),
        BTN_MANAGE_WINDOW(ModerateDialog.main_moderate_text),
        TextInput(
            id="delete_black_words",
            on_error=ListWordsValidator.error,
            type_factory=ListWordsValidator.validate,
            on_success=ModerateWordsHandler.delete_words,
        ),
        state=ModerateDialog.delete_words,
    ),
)
